class ZDictionary_@KeyType_@ValType:Av_Object{
    Array<@KeyType> Keys;
    Array<@ValType> Values;

    bool Put(@KeyType Key, @ValType Value){
        if(!Key || !Value || Get(Key))
            return false;
        else if(Keys.Find(Key)==Keys.Size()){
            Error("Key: "..Key.." Already Exists");
            return false;
        }
        Keys.Push(Key);
        Values.Push(Value);
        return true;
    }
    
    @ValType Get(@KeyType Key) const{
        uint Index=Keys.Find(Key);
        if(Index==Keys.Size())
            return null;
        return Values[Index];
    }
    
    @ValType Remove(@KeyType Key){
        uint Index=Keys.Find(Key);
        @ValType Value=Values[Index];
        Keys.Delete(Index);
        Values.Delete(Index);
        return Value;
    }
    
    uint Size() const
    {return Keys.Size();}
    
    ZDictionaryEntry_@KeyType_@ValType Index(uint Index) const
    {return ZDictionaryEntry_@KeyType_@ValType.Create(Keys[Index], Values[Index]);}
    
    void Clear(){
        Keys.Clear();
        Values.Clear();
    }
}

class ZDictionaryEntry_@KeyType_@ValType{
    @KeyType Key;
    @ValType Value;
    
    static
    ZDictionaryEntry_@KeyType_@ValType Create(@KeyType Key, @ValType Value){
        ZDictionaryEntry_@KeyType_@ValType Entry=new('ZDictionaryEntry_@KeyType_@ValType');
        Entry.Key=Key;
        Entry.Value=Value;
        return Entry;
    }
}
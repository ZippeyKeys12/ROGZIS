class ZF_Bezier:ZF_Base{
    ZVector Points;

    Array<ZF_Bernstein> Bernsteins;

    static
    ZF_Bezier Create(ZVector Points){
        ZF_Bezier Result=ZF_Bezier(ZF_Base.Create('Bezier'));
        Result.Points=Points.Clone();
        uint Size=Points.Size();
        for(int I=0; I<Size; I++)
            Result.Bernsteins.Push(ZF_Bernstein.Create(Size, I));
        return Result;
    }

    override
    double Apply(double X){
        int Total=0;
        for(int i=0; i<Points.Size(); i++)
            Total+=Bernsteins[i].Apply(X)*Points.Get(i);
        return Total;
    }

    override
    ZF_Base Clone() const{
        ZF_Bezier Result=ZF_Bezier(super.Clone());
        Result.Points=Points.Clone();
        uint Size=Points.Size();
        for(int I=0; I<Size; I++)
            Result.Bernsteins.Push(ZF_Bernstein.Create(Size, I));
        return Result;
    }
}
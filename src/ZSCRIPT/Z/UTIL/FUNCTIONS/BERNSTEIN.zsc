class ZF_Bernstein:ZF_Base{
    int N,
        I;

    static
    ZF_Bernstein Create(int N, int I){
        ZF_Bernstein Result=ZF_Bernstein(ZF_Base.Create('Bernstein', ZCalc_S.nCr(N, I)));
        Result.N=N;
        Result.I=I;
        return Result;
    }

    override
    double Apply(double X) const
    {return Misc*super.Apply(X)**I*(1-super.Apply(X))**(N-I);}

    override
    ZF_Base Clone() const{
        ZF_Bernstein Result=ZF_Bernstein(super.Clone());
        Result.N=N;
        Result.I=I;
        return Result;
    }
}
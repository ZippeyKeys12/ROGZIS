extend
class ZMAU_BoostDash{
    [Config]{
        "DashCost": "ABILITIES.iDashCost",
        "DashPower": "ABILITIES.iDashPower",
        "DashCooldown": "ABILITIES.iDashCooldown"
    }

    int DashCountdown;

    override
    void Defaults(){
        DashCountdown=0;
    }

    override
    void Tick(ZPlayer Player, PlayerInfo PlayerInfo)
    {if(DashCountdown>0)DashCountdown--;}

    override
    void HandleMovement(ZPlayer Player, PlayerInfo PlayerInfo){
        ZMarine Marine=ZMarine(Player);
        if(!Marine)return;
        if(DashCountdown==0){
            static const uint DashKeys[]={
                BT_FORWARD,
                BT_BACK,
                BT_MOVELEFT,
                BT_MOVERIGHT
            };
            ZMStats Stats=Marine.MStats;
            for(int i=PlayerInfo.OnGround; i<DashKeys.Size(); i++){
                if((Marine.NewButtons & BT_SPEED) && (!PlayerInfo.OnGround || (~Marine.Buttons & BT_FORWARD)) && (Marine.Buttons & DashKeys[i]) &&
                   (Stats.Energy>DashCost)){
                    if(Marine.NewButtons & BT_SPEED){
                        Stats.Energy-=DashCost;
                        int MidAirBoost=DashPower*!PlayerInfo.OnGround,
                            Power=(PlayerInfo.OnGround?2:1)*DashPower*Av_Calc_S.Alternate(i);
                        Marine.Vel.xy+=Power*((i>1)?-Marine.SideVector:Marine.ViewVector.xy.Unit());
                        Marine.Vel.z+=MidAirBoost;
                        DashCountdown=DashCooldown;
                    }
                    return;
                }
            }
        }
    }
}
class ZEntityManager:ZEventHandler{
    Array<ZEntity> Entities;

    static
    clearscope
    ZEntityManager Instance()
    {return ZEntityManager(EventHandler.Find('ZEntityManager'));}

    override
    void WorldLoaded(WorldEvent e){
        if(e.IsReopen){
            ThinkerIterator it=ThinkerIterator.Create('ZEntity', STAT_ZTHING);
            ZEntity Entity;
            while(Entity=ZEntity(it.Next()))
                Register(Entity);
        }
    }

    override
    void WorldUnloaded(WorldEvent e)
    {Entities.Clear();}

    override
    void EntitySpawned(WorldEvent e)
    {Register(ZEntity(e.Thing));}

    override
    void WorldTick(){
        for(int i=0; i<Entities.Size(); i++)
            if(Entities[i].GetNextThink()==TICK_NEVER_THINK){
                Entities.Delete(i);
                i--;
            }else if(Level.TotalTime==Entities[i].GetNextThink()){
                Entities[i].PreThink();
                Entities[i].Think();
                Entities[i].PostThink();
            }
    }

    void Register(ZEntity Entity){
        if(Entities.Find(Entity)!=Entities.Size()){
            Error("ZEntity: "..Entity.GetClassName().."is already registered");
            return;
        }
        if(Entity.GetNextThink()!=TICK_NEVER_THINK)
            Entities.Push(Entity);
    }

    void Unregister(ZEntity Entity)
    {Entities.Delete(Entities.Find(Entity));}
}
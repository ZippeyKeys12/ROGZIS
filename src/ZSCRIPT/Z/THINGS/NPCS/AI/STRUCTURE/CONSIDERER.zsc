class ZConsiderer:ZObject{
    private
    Array<Name> Considerations;

    static
    ZConsiderer Create(uint NumConsiderations)
    {return new('ZConsiderer').Init(NumConsiderations);}

    virtual
    ZConsiderer Init(uint NumConsiderations){
        for(int i=0; i<NumConsiderations; i++)
            Considerations.Push(i);
        return self;
    }

    void SetID(uint Index, Name ID)
    {Considerations[Index]=ID;}

    Name GetID(uint Index)
    {return Considerations[Index];}

    Name Consider(ZVector Rewards){
        if(Rewards.Length()!=Considerations.Size()){
            Error("Incorrect Number of Considerations\nIs: "..Rewards.Length()..", Should Be: "..Considerations.Size());
            return '';
        }
        Array<uint> Best;
        Best.Push(0);
        for(int i=1; i<Considerations.Size(); i++)
            if(Rewards.Get(i)>Rewards.Get(Best[0])){
                Best.Clear();
                Best.Push(i);
            }else if(Rewards.Get(i)==Rewards.Get(Best[0]))
                Best.Push(i);
        // TODO: Maybe make it based on order (priority)
        return Considerations[Best[Random(0, Best.Size()-1)]];
    }
}